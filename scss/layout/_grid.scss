.row {
	max-width: $grid-width;
	margin: 0 auto;
	padding: $row-padding;

	@include clearfix;

	@include respond(landscape) {
		max-width: 100%;
	}

	@include respond(portrait) {
		max-width: $grid-width-small;
		padding: $row-padding-medium;
	}

	@include respond(phone) {
		padding: $row-padding-small;
	}

	//gutter vertical
	&:not(:last-child) {
		margin-bottom: $gutter-vertical;

		@include respond(portrait) {
			margin-bottom: $gutter-vertical-small;
		}
	}
	//float-left, margin-right
	[class^="col-"] {
		float: left;

		@include respond(portrait) {
			width: 100% !important;
		}

		&:not(:last-child) {
			margin-right: $gutter-horizontal;

			@include respond(portrait) {
				margin-right: $gutter-horizontal-small;
				margin-bottom: $gutter-vertical-small;
			}
		}
	}

	.col-1-of-2 {
		width: calc((100% - #{$gutter-horizontal}) / 2);
	}

	.col-1-of-3 {
		width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
	}

	.col-1-of-4 {
		width: calc((100% - 3 * #{$gutter-horizontal}) / 4);

		@include respond(landscape) {
			width: calc((100% - #{$gutter-horizontal}) / 2);
		}

		&:nth-child(2n + 2) {
			@include respond(landscape) {
				margin-right: 0;
			}

			@include respond(portrait) {
				margin-right: unset;
			}
		}

		&:nth-last-child(n + 3) {
			@include respond(landscape) {
				margin-bottom: $gutter-horizontal;
			}
		}
	}

	.col-2-of-3 {
		width: calc(((100% - 2 * #{$gutter-horizontal}) / 3 * 2) + #{$gutter-horizontal});
	}

	.col-2-of-4 {
		width: calc(((100% - 3 * #{$gutter-horizontal}) / 4 * 2) + #{$gutter-horizontal});
	}

	.col-3-of-4 {
		width: calc(((100% - 3 * #{$gutter-horizontal}) / 4 * 3) + 2 * #{$gutter-horizontal});
	}
	/* FORMULA
  col-x-of-y {
  width: calc(((100% - (y-1) * $gutter-horizontal) / y * x) + (x-1) * $gutter-horizontal);
  }
  */
}
